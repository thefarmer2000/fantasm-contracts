{
  "address": "0x7814E1a60E86417D85b048459A66cd6f671f88d4",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_xToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_yToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleXToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_oracleYToken",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "getXTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getXTokenTWAP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getYTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getYTokenTWAP",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleXToken",
      "outputs": [
        {
          "internalType": "contract IPairOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "oracleYToken",
      "outputs": [
        {
          "internalType": "contract IPairOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "xToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "yToken",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0x9427f477abe35dc224587b40f945a0f7b601a5d6048e741846ab66b81d403e62",
  "receipt": {
    "to": null,
    "from": "0x92F56Ca0820ad4eBA8C98a586a46b348BbFc80fe",
    "contractAddress": "0x7814E1a60E86417D85b048459A66cd6f671f88d4",
    "transactionIndex": 2,
    "gasUsed": "3335098",
    "logsBloom": "0x
    "blockHash": "0x074e2b473c367879064920a4f4057885af934e1ad08352804639abd705d09dc0",
    "transactionHash": "0x9427f477abe35dc224587b40f945a0f7b601a5d6048e741846ab66b81d403e62",
    "logs": [
      {
        "transactionIndex": 2,
        "blockNumber": 58071858,
        "transactionHash": "0x9427f477abe35dc224587b40f945a0f7b601a5d6048e741846ab66b81d403e62",
        "address": "0x7814E1a60E86417D85b048459A66cd6f671f88d4",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000092f56ca0820ad4eba8c98a586a46b348bbfc80fe"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0x074e2b473c367879064920a4f4057885af934e1ad08352804639abd705d09dc0"
      }
    ],
    "blockNumber": 58071858,
    "cumulativeGasUsed": "3630128",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x45A21E90A4e95582797982Fb8C8318ECDF0a21Ae",
    "0x42972EdecD94BDD19A622A6a419bDDed2de56E08",
    "0x61D24670DC1Bb2638b0732576fEf3Ca4cAa41ab7",
    "0x25b3Ff54d4952DAbcA148F01EfC9c9c48696E3A2"
  ],
  "numDeployments": 1,
  "solcInputHash": "0f37fbee7d56cb39e34800a787a815e9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_xToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_yToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleXToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracleYToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getXTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getXTokenTWAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getYTokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getYTokenTWAP\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleXToken\",\"outputs\":[{\"internalType\":\"contract IPairOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oracleYToken\",\"outputs\":[{\"internalType\":\"contract IPairOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"yToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/oracles/MasterOracle.sol\":\"MasterOracle\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/IPairOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\ninterface IPairOracle {\\r\\n    function twap(address token, uint256 pricePrecision) external view returns (uint256 amountOut);\\r\\n\\r\\n    function spot(address token, uint256 pricePrecision) external view returns (uint256 amountOut);\\r\\n\\r\\n    function update() external;\\r\\n}\\r\\n\",\"keccak256\":\"0x1ba921d8e9dfe74b471647bf2b7301a1f27b353514b9f84ec49853c3b174bb86\",\"license\":\"MIT\"},\"contracts/oracles/MasterOracle.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"../interfaces/IPairOracle.sol\\\";\\r\\n\\r\\ncontract MasterOracle is Ownable {\\r\\n    uint256 private constant PRICE_PRECISION = 1e18;\\r\\n\\r\\n    IPairOracle public oracleXToken;\\r\\n    IPairOracle public oracleYToken;\\r\\n\\r\\n    address public xToken;\\r\\n    address public yToken;\\r\\n\\r\\n    constructor(\\r\\n        address _xToken,\\r\\n        address _yToken,\\r\\n        address _oracleXToken,\\r\\n        address _oracleYToken\\r\\n    ) {\\r\\n        require(_xToken != address(0), \\\"Invalid address\\\");\\r\\n        require(_yToken != address(0), \\\"Invalid address\\\");\\r\\n        require(_oracleXToken != address(0), \\\"Invalid address\\\");\\r\\n        require(_oracleYToken != address(0), \\\"Invalid address\\\");\\r\\n        xToken = _xToken;\\r\\n        yToken = _yToken;\\r\\n        oracleXToken = IPairOracle(_oracleXToken);\\r\\n        oracleYToken = IPairOracle(_oracleYToken);\\r\\n    }\\r\\n\\r\\n    function getXTokenPrice() public view returns (uint256) {\\r\\n        return oracleXToken.spot(xToken, PRICE_PRECISION);\\r\\n    }\\r\\n\\r\\n    function getYTokenPrice() public view returns (uint256) {\\r\\n        return oracleYToken.spot(yToken, PRICE_PRECISION);\\r\\n    }\\r\\n\\r\\n    function getXTokenTWAP() public view returns (uint256) {\\r\\n        return oracleXToken.twap(xToken, PRICE_PRECISION);\\r\\n    }\\r\\n\\r\\n    function getYTokenTWAP() public view returns (uint256) {\\r\\n        return oracleYToken.twap(yToken, PRICE_PRECISION);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x4819d8ded4fef9d4eeaae9ecfa2f4b3c50c12e5c4b04c50719a2ebfc1c742d6f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161071638038061071683398101604081905261002f9161021c565b610038336101b0565b6001600160a01b0384166100855760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b60448201526064015b60405180910390fd5b6001600160a01b0383166100cd5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161007c565b6001600160a01b0382166101155760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161007c565b6001600160a01b03811661015d5760405162461bcd60e51b815260206004820152600f60248201526e496e76616c6964206164647265737360881b604482015260640161007c565b600380546001600160a01b039586166001600160a01b031991821617909155600480549486169482169490941790935560018054928516928416929092179091556002805491909316911617905561026f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b038116811461021757600080fd5b919050565b60008060008060808587031215610231578384fd5b61023a85610200565b935061024860208601610200565b925061025660408601610200565b915061026460608601610200565b905092959194509250565b6104988061027e6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101175780638da5cb5b14610121578063c0ce623814610132578063c649fc2f1461013a578063f2fde38b1461014d578063fedb25321461016057600080fd5b8063088b699e146100ae5780633ddf9e39146100de57806349bfcca1146100f45780635f4370a5146101075780636e16399c1461010f575b600080fd5b6003546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e6610173565b6040519081526020016100d5565b6004546100c1906001600160a01b031681565b6100e661020b565b6100e6610252565b61011f610299565b005b6000546001600160a01b03166100c1565b6100e66102ad565b6001546100c1906001600160a01b031681565b61011f61015b36600461041c565b6102f4565b6002546100c1906001600160a01b031681565b60015460035460405163153ffc7760e01b81526001600160a01b039182166004820152670de0b6b3a76400006024820152600092919091169063153ffc77906044015b60206040518083038186803b1580156101ce57600080fd5b505afa1580156101e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610206919061044a565b905090565b60025460048054604051630d01142560e31b81526001600160a01b0391821692810192909252670de0b6b3a764000060248301526000921690636808a128906044016101b6565b6002546004805460405163153ffc7760e01b81526001600160a01b0391821692810192909252670de0b6b3a76400006024830152600092169063153ffc77906044016101b6565b6102a1610372565b6102ab60006103cc565b565b600154600354604051630d01142560e31b81526001600160a01b039182166004820152670de0b6b3a764000060248201526000929190911690636808a128906044016101b6565b6102fc610372565b6001600160a01b0381166103665760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61036f816103cc565b50565b6000546001600160a01b031633146102ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561042d578081fd5b81356001600160a01b0381168114610443578182fd5b9392505050565b60006020828403121561045b578081fd5b505191905056fea26469706673582212203d723b56bc05964226270b1f93bcc74778025cda8edb4aec3113949616cb62b664736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063715018a611610071578063715018a6146101175780638da5cb5b14610121578063c0ce623814610132578063c649fc2f1461013a578063f2fde38b1461014d578063fedb25321461016057600080fd5b8063088b699e146100ae5780633ddf9e39146100de57806349bfcca1146100f45780635f4370a5146101075780636e16399c1461010f575b600080fd5b6003546100c1906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100e6610173565b6040519081526020016100d5565b6004546100c1906001600160a01b031681565b6100e661020b565b6100e6610252565b61011f610299565b005b6000546001600160a01b03166100c1565b6100e66102ad565b6001546100c1906001600160a01b031681565b61011f61015b36600461041c565b6102f4565b6002546100c1906001600160a01b031681565b60015460035460405163153ffc7760e01b81526001600160a01b039182166004820152670de0b6b3a76400006024820152600092919091169063153ffc77906044015b60206040518083038186803b1580156101ce57600080fd5b505afa1580156101e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610206919061044a565b905090565b60025460048054604051630d01142560e31b81526001600160a01b0391821692810192909252670de0b6b3a764000060248301526000921690636808a128906044016101b6565b6002546004805460405163153ffc7760e01b81526001600160a01b0391821692810192909252670de0b6b3a76400006024830152600092169063153ffc77906044016101b6565b6102a1610372565b6102ab60006103cc565b565b600154600354604051630d01142560e31b81526001600160a01b039182166004820152670de0b6b3a764000060248201526000929190911690636808a128906044016101b6565b6102fc610372565b6001600160a01b0381166103665760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b61036f816103cc565b50565b6000546001600160a01b031633146102ab5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161035d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121561042d578081fd5b81356001600160a01b0381168114610443578182fd5b9392505050565b60006020828403121561045b578081fd5b505191905056fea26469706673582212203d723b56bc05964226270b1f93bcc74778025cda8edb4aec3113949616cb62b664736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/oracles/MasterOracle.sol:MasterOracle",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 11142,
        "contract": "contracts/oracles/MasterOracle.sol:MasterOracle",
        "label": "oracleXToken",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IPairOracle)9936"
      },
      {
        "astId": 11145,
        "contract": "contracts/oracles/MasterOracle.sol:MasterOracle",
        "label": "oracleYToken",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(IPairOracle)9936"
      },
      {
        "astId": 11147,
        "contract": "contracts/oracles/MasterOracle.sol:MasterOracle",
        "label": "xToken",
        "offset": 0,
        "slot": "3",
        "type": "t_address"
      },
      {
        "astId": 11149,
        "contract": "contracts/oracles/MasterOracle.sol:MasterOracle",
        "label": "yToken",
        "offset": 0,
        "slot": "4",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(IPairOracle)9936": {
        "encoding": "inplace",
        "label": "contract IPairOracle",
        "numberOfBytes": "20"
      }
    }
  }
}