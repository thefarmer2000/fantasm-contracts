{
  "address": "0x8f9Ec4D70caFC6A57FdffcCd88A37Da12b968da1",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IWonderfulStaking",
          "name": "_staking",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_requester",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "FundRequested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "StrategyAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "TokenRewardAllocated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "addStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "allocateFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_strategy",
          "type": "address"
        }
      ],
      "name": "removeStrategy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "requestFund",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "staking",
      "outputs": [
        {
          "internalType": "contract IWonderfulStaking",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategies",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "strategiesArray",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x7710d3f62797b31a56f618dd8b8f068bdc2a54fa27bc2ed9d5e1cd239c5ba1d7",
  "receipt": {
    "to": null,
    "from": "0x92F56Ca0820ad4eBA8C98a586a46b348BbFc80fe",
    "contractAddress": "0x8f9Ec4D70caFC6A57FdffcCd88A37Da12b968da1",
    "transactionIndex": 1,
    "gasUsed": "6537412",
    "logsBloom": "0x
    "blockHash": "0xf99df29c45c9b5dfbf9ee74a301ac79f6a7b3768e45bbceda90170cc44481b75",
    "transactionHash": "0x7710d3f62797b31a56f618dd8b8f068bdc2a54fa27bc2ed9d5e1cd239c5ba1d7",
    "logs": [
      {
        "transactionIndex": 1,
        "blockNumber": 58071972,
        "transactionHash": "0x7710d3f62797b31a56f618dd8b8f068bdc2a54fa27bc2ed9d5e1cd239c5ba1d7",
        "address": "0x8f9Ec4D70caFC6A57FdffcCd88A37Da12b968da1",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x00000000000000000000000092f56ca0820ad4eba8c98a586a46b348bbfc80fe"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xf99df29c45c9b5dfbf9ee74a301ac79f6a7b3768e45bbceda90170cc44481b75"
      }
    ],
    "blockNumber": 58071972,
    "cumulativeGasUsed": "6537412",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x564DdF4206994FA0Ad0d11947095cA3dfcb905e2"
  ],
  "numDeployments": 1,
  "solcInputHash": "0f37fbee7d56cb39e34800a787a815e9",
  "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IWonderfulStaking\",\"name\":\"_staking\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_requester\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"FundRequested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"StrategyAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"TokenRewardAllocated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"addStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"allocateFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_strategy\",\"type\":\"address\"}],\"name\":\"removeStrategy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"requestFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"staking\",\"outputs\":[{\"internalType\":\"contract IWonderfulStaking\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategies\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"strategiesArray\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addStrategy(address)\":{\"params\":{\"_strategy\":\"Address of the strategy contract\"}},\"allocateFee(address,uint256)\":{\"params\":{\"_amount\":\"Amount of fee will be distributed\",\"_token\":\"Address of ERC-20 token\"}},\"balanceOf(address)\":{\"params\":{\"_token\":\"Address of the ERC-20 token\"},\"returns\":{\"_0\":\"Balance of the WonderfulTreasury\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeStrategy(address)\":{\"params\":{\"_strategy\":\"Address of the strategy contract\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"requestFund(address,uint256)\":{\"params\":{\"_amount\":\"The requested amount\",\"_token\":\"Address of the ERC-20 token\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addStrategy(address)\":{\"notice\":\"Add new strategy\"},\"allocateFee(address,uint256)\":{\"notice\":\"Allocate protocol's fee to stakers\"},\"balanceOf(address)\":{\"notice\":\"Return ERC-20 balance of WonderfulTreasury\"},\"removeStrategy(address)\":{\"notice\":\"Remove current strategy\"},\"requestFund(address,uint256)\":{\"notice\":\"Request fund from Reserve - only can be called from whitelisted strategies\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/treasury/WonderfulTreasury.sol\":\"WonderfulTreasury\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n}\\n\",\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/draft-IERC20Permit.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\\n     * given ``owner``'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/utils/SafeERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\nimport \\\"../extensions/draft-IERC20Permit.sol\\\";\\nimport \\\"../../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using Address for address;\\n\\n    function safeTransfer(\\n        IERC20 token,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(\\n        IERC20 token,\\n        address from,\\n        address to,\\n        uint256 value\\n    ) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        require(\\n            (value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender) + value;\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(\\n        IERC20 token,\\n        address spender,\\n        uint256 value\\n    ) internal {\\n        unchecked {\\n            uint256 oldAllowance = token.allowance(address(this), spender);\\n            require(oldAllowance >= value, \\\"SafeERC20: decreased allowance below zero\\\");\\n            uint256 newAllowance = oldAllowance - value;\\n            _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n        }\\n    }\\n\\n    function safePermit(\\n        IERC20Permit token,\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) internal {\\n        uint256 nonceBefore = token.nonces(owner);\\n        token.permit(owner, spender, value, deadline, v, r, s);\\n        uint256 nonceAfter = token.nonces(owner);\\n        require(nonceAfter == nonceBefore + 1, \\\"SafeERC20: permit did not succeed\\\");\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) {\\n            // Return data is optional\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\\n     *\\n     * _Available since v4.8._\\n     */\\n    function verifyCallResultFromTarget(\\n        address target,\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        if (success) {\\n            if (returndata.length == 0) {\\n                // only check isContract if the call was successful and the return data is empty\\n                // otherwise we already know that it was a contract\\n                require(isContract(target), \\\"Address: call to non-contract\\\");\\n            }\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    /**\\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason or using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            _revert(returndata, errorMessage);\\n        }\\n    }\\n\\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\\n        // Look for revert reason and bubble it up if present\\n        if (returndata.length > 0) {\\n            // The easiest way to bubble the revert reason is using memory via assembly\\n            /// @solidity memory-safe-assembly\\n            assembly {\\n                let returndata_size := mload(returndata)\\n                revert(add(32, returndata), returndata_size)\\n            }\\n        } else {\\n            revert(errorMessage);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/interfaces/IWonderfulStaking.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\ninterface IWonderfulStaking {\\r\\n    function addReward(address rewardsToken, address distributor) external;\\r\\n\\r\\n    function mint(address user, uint256 amount) external;\\r\\n\\r\\n    function notifyRewardAmount(address rewardsToken, uint256 reward) external;\\r\\n}\\r\\n\",\"keccak256\":\"0xb8b283e66fb158cd5570ec809930abf2821749ce93b7c0977bcdfd8c8cad484d\",\"license\":\"MIT\"},\"contracts/treasury/WonderfulTreasury.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity 0.8.4;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\\\";\\r\\nimport \\\"../interfaces/IWonderfulStaking.sol\\\";\\r\\n\\r\\n/*  WonderfulTreasury.sol ============================================\\r\\n    The contract is to store the reserve of Wonderful Protocol\\r\\n    Contract will have a whitelist of strategy contracts which can request funding from Reserve\\r\\n    These strategy contracts can be used to Allocate fee, Convert reserve to Protocol Owned Liquidity, Recollateralize, etc\\r\\n==================================================================== */\\r\\ncontract WonderfulTreasury is Ownable {\\r\\n    using SafeERC20 for IERC20;\\r\\n    using Address for address;\\r\\n\\r\\n    mapping(address => bool) public strategies;\\r\\n    address[] public strategiesArray;\\r\\n    IWonderfulStaking public staking;\\r\\n\\r\\n    constructor(IWonderfulStaking _staking) {\\r\\n        staking = _staking;\\r\\n    }\\r\\n\\r\\n    // ========== PUBLIC VIEW FUNCTIONS ============\\r\\n\\r\\n    /// @notice Return ERC-20 balance of WonderfulTreasury\\r\\n    /// @param _token Address of the ERC-20 token\\r\\n    /// @return Balance of the WonderfulTreasury\\r\\n    function balanceOf(address _token) public view returns (uint256) {\\r\\n        return IERC20(_token).balanceOf(address(this));\\r\\n    }\\r\\n\\r\\n    /* ========== RESTRICTED FUNCTIONS ========== */\\r\\n\\r\\n    /// @notice Request fund from Reserve - only can be called from whitelisted strategies\\r\\n    /// @param _token Address of the ERC-20 token\\r\\n    /// @param _amount The requested amount\\r\\n    function requestFund(address _token, uint256 _amount) external {\\r\\n        require(strategies[msg.sender], \\\"WonderfulTreasury::requestFund: Only strategies can request fund\\\");\\r\\n        require(_amount <= balanceOf(_token), \\\"WonderfulTreasury::requestFund: Request more fund than balance\\\");\\r\\n        IERC20(_token).safeIncreaseAllowance(msg.sender, _amount);\\r\\n        emit FundRequested(msg.sender, _amount);\\r\\n    }\\r\\n\\r\\n    /// @notice Add new strategy\\r\\n    /// @param _strategy Address of the strategy contract\\r\\n    function addStrategy(address _strategy) external onlyOwner {\\r\\n        require(_strategy != address(0), \\\"WonderfulTreasury::addStrategy: invalid address\\\");\\r\\n        require(!strategies[_strategy], \\\"WonderfulTreasury::addStrategy: strategy was previously added\\\");\\r\\n        strategies[_strategy] = true;\\r\\n        strategiesArray.push(_strategy);\\r\\n        emit StrategyAdded(_strategy);\\r\\n    }\\r\\n\\r\\n    /// @notice Remove current strategy\\r\\n    /// @param _strategy Address of the strategy contract\\r\\n    function removeStrategy(address _strategy) external onlyOwner {\\r\\n        require(strategies[_strategy], \\\"WonderfulTreasury::removeStrategy: strategy not found\\\");\\r\\n        delete strategies[_strategy];\\r\\n\\r\\n        for (uint256 i = 0; i < strategiesArray.length; i++) {\\r\\n            if (strategiesArray[i] == _strategy) {\\r\\n                strategiesArray[i] = address(0);\\r\\n                // This will leave a null in the array and keep the indices the same\\r\\n                break;\\r\\n            }\\r\\n        }\\r\\n        emit StrategyRemoved(_strategy);\\r\\n    }\\r\\n\\r\\n    /// @notice Allocate protocol's fee to stakers\\r\\n    /// @param _token Address of ERC-20 token\\r\\n    /// @param _amount Amount of fee will be distributed\\r\\n    function allocateFee(address _token, uint256 _amount) external onlyOwner {\\r\\n        require(address(staking) != address(0), \\\"WonderfulTreasury::allocateFee:Fee distributor not set\\\");\\r\\n        require(_amount > 0, \\\"WonderfulTreasury::allocateFee: invalid amount\\\");\\r\\n        IERC20(_token).safeIncreaseAllowance(address(staking), _amount);\\r\\n        staking.notifyRewardAmount(_token, _amount);\\r\\n        emit TokenRewardAllocated(_token, _amount);\\r\\n    }\\r\\n\\r\\n    // EVENTS\\r\\n    event StrategyAdded(address indexed _strategy);\\r\\n    event StrategyRemoved(address indexed _strategy);\\r\\n    event FundRequested(address indexed _requester, uint256 _amount);\\r\\n    event TokenRewardAllocated(address indexed _token, uint256 _amount);\\r\\n}\\r\\n\",\"keccak256\":\"0x81e3134ef792d356b8c857a325bdedd7989ad166c6b79a1a321ce258a411f908\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610fb4380380610fb483398101604081905261002f916100ad565b6100383361005d565b600380546001600160a01b0319166001600160a01b03929092169190911790556100db565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100be578081fd5b81516001600160a01b03811681146100d4578182fd5b9392505050565b610eca806100ea6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c806370a082311161007157806370a082311461014c578063715018a61461016d5780638da5cb5b14610175578063ab1e912214610186578063b474512514610199578063f2fde38b146101ac57600080fd5b8063175188e8146100ae578063223e5479146100c357806339ebf823146100d65780634cf088d91461010e5780635963e2ad14610139575b600080fd5b6100c16100bc366004610d36565b6101bf565b005b6100c16100d1366004610d36565b610363565b6100f96100e4366004610d36565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b600354610121906001600160a01b031681565b6040516001600160a01b039091168152602001610105565b6100c1610147366004610d57565b6104f4565b61015f61015a366004610d36565b6106a1565b604051908152602001610105565b6100c1610721565b6000546001600160a01b0316610121565b610121610194366004610da0565b610735565b6100c16101a7366004610d57565b61075f565b6100c16101ba366004610d36565b6108aa565b6101c7610923565b6001600160a01b03811660009081526001602052604090205460ff166102525760405162461bcd60e51b815260206004820152603560248201527f576f6e64657266756c54726561737572793a3a72656d6f7665537472617465676044820152741e4e881cdd1c985d1959de481b9bdd08199bdd5b99605a1b60648201526084015b60405180910390fd5b6001600160a01b0381166000908152600160205260408120805460ff191690555b60025481101561032b57816001600160a01b0316600282815481106102a857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610319576000600282815481106102e657634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061032b565b8061032381610e63565b915050610273565b506040516001600160a01b038216907f09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea490600090a250565b61036b610923565b6001600160a01b0381166103d95760405162461bcd60e51b815260206004820152602f60248201527f576f6e64657266756c54726561737572793a3a61646453747261746567793a2060448201526e696e76616c6964206164647265737360881b6064820152608401610249565b6001600160a01b03811660009081526001602052604090205460ff16156104685760405162461bcd60e51b815260206004820152603d60248201527f576f6e64657266756c54726561737572793a3a61646453747261746567793a2060448201527f7374726174656779207761732070726576696f75736c792061646465640000006064820152608401610249565b6001600160a01b0381166000818152600160208190526040808320805460ff19168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b03191684179055517f3f008fd510eae7a9e7bee13513d7b83bef8003d488b5a3d0b0da4de71d6846f19190a250565b6104fc610923565b6003546001600160a01b03166105735760405162461bcd60e51b815260206004820152603660248201527f576f6e64657266756c54726561737572793a3a616c6c6f636174654665653a46604482015275195948191a5cdd1c9a589d5d1bdc881b9bdd081cd95d60521b6064820152608401610249565b600081116105da5760405162461bcd60e51b815260206004820152602e60248201527f576f6e64657266756c54726561737572793a3a616c6c6f636174654665653a2060448201526d1a5b9d985b1a5908185b5bdd5b9d60921b6064820152608401610249565b6003546105f4906001600160a01b0384811691168361097d565b60035460405163b66503cf60e01b81526001600160a01b038481166004830152602482018490529091169063b66503cf90604401600060405180830381600087803b15801561064257600080fd5b505af1158015610656573d6000803e3d6000fd5b50505050816001600160a01b03167f6d2dbeb83c612f93fc06a5a8d74ebf64946ae126076c60c7f3b69c05ecdbd3a48260405161069591815260200190565b60405180910390a25050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b1580156106e357600080fd5b505afa1580156106f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071b9190610db8565b92915050565b610729610923565b6107336000610a66565b565b6002818154811061074557600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526001602052604090205460ff166107e6576040805162461bcd60e51b81526020600482015260248101919091527f576f6e64657266756c54726561737572793a3a7265717565737446756e643a2060448201527f4f6e6c7920737472617465676965732063616e20726571756573742066756e646064820152608401610249565b6107ef826106a1565b8111156108645760405162461bcd60e51b815260206004820152603e60248201527f576f6e64657266756c54726561737572793a3a7265717565737446756e643a2060448201527f52657175657374206d6f72652066756e64207468616e2062616c616e636500006064820152608401610249565b6108786001600160a01b038316338361097d565b60405181815233907fc01885824d09db2a2cad0d38d82321fdb9026a98b421d8ffdacb61e52310750d90602001610695565b6108b2610923565b6001600160a01b0381166109175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610249565b61092081610a66565b50565b6000546001600160a01b031633146107335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610249565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b1580156109c957600080fd5b505afa1580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a019190610db8565b610a0b9190610e1f565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052909150610a60908590610ab6565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610b0b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b8d9092919063ffffffff16565b805190915015610b885780806020019051810190610b299190610d80565b610b885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610249565b505050565b6060610b9c8484600085610ba4565b949350505050565b606082471015610c055760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610249565b600080866001600160a01b03168587604051610c219190610dd0565b60006040518083038185875af1925050503d8060008114610c5e576040519150601f19603f3d011682016040523d82523d6000602084013e610c63565b606091505b5091509150610c7487838387610c7f565b979650505050505050565b60608315610ceb578251610ce4576001600160a01b0385163b610ce45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610249565b5081610b9c565b610b9c8383815115610d005781518083602001fd5b8060405162461bcd60e51b81526004016102499190610dec565b80356001600160a01b0381168114610d3157600080fd5b919050565b600060208284031215610d47578081fd5b610d5082610d1a565b9392505050565b60008060408385031215610d69578081fd5b610d7283610d1a565b946020939093013593505050565b600060208284031215610d91578081fd5b81518015158114610d50578182fd5b600060208284031215610db1578081fd5b5035919050565b600060208284031215610dc9578081fd5b5051919050565b60008251610de2818460208701610e37565b9190910192915050565b6020815260008251806020840152610e0b816040850160208701610e37565b601f01601f19169190910160400192915050565b60008219821115610e3257610e32610e7e565b500190565b60005b83811015610e52578181015183820152602001610e3a565b83811115610a605750506000910152565b6000600019821415610e7757610e77610e7e565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208693d05e1f386cd38eefbbf7cb96d48cb351569e764f5d46907f6e7263e78a2364736f6c63430008040033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c806370a082311161007157806370a082311461014c578063715018a61461016d5780638da5cb5b14610175578063ab1e912214610186578063b474512514610199578063f2fde38b146101ac57600080fd5b8063175188e8146100ae578063223e5479146100c357806339ebf823146100d65780634cf088d91461010e5780635963e2ad14610139575b600080fd5b6100c16100bc366004610d36565b6101bf565b005b6100c16100d1366004610d36565b610363565b6100f96100e4366004610d36565b60016020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b600354610121906001600160a01b031681565b6040516001600160a01b039091168152602001610105565b6100c1610147366004610d57565b6104f4565b61015f61015a366004610d36565b6106a1565b604051908152602001610105565b6100c1610721565b6000546001600160a01b0316610121565b610121610194366004610da0565b610735565b6100c16101a7366004610d57565b61075f565b6100c16101ba366004610d36565b6108aa565b6101c7610923565b6001600160a01b03811660009081526001602052604090205460ff166102525760405162461bcd60e51b815260206004820152603560248201527f576f6e64657266756c54726561737572793a3a72656d6f7665537472617465676044820152741e4e881cdd1c985d1959de481b9bdd08199bdd5b99605a1b60648201526084015b60405180910390fd5b6001600160a01b0381166000908152600160205260408120805460ff191690555b60025481101561032b57816001600160a01b0316600282815481106102a857634e487b7160e01b600052603260045260246000fd5b6000918252602090912001546001600160a01b03161415610319576000600282815481106102e657634e487b7160e01b600052603260045260246000fd5b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061032b565b8061032381610e63565b915050610273565b506040516001600160a01b038216907f09a1db4b80c32706328728508c941a6b954f31eb5affd32f236c1fd405f8fea490600090a250565b61036b610923565b6001600160a01b0381166103d95760405162461bcd60e51b815260206004820152602f60248201527f576f6e64657266756c54726561737572793a3a61646453747261746567793a2060448201526e696e76616c6964206164647265737360881b6064820152608401610249565b6001600160a01b03811660009081526001602052604090205460ff16156104685760405162461bcd60e51b815260206004820152603d60248201527f576f6e64657266756c54726561737572793a3a61646453747261746567793a2060448201527f7374726174656779207761732070726576696f75736c792061646465640000006064820152608401610249565b6001600160a01b0381166000818152600160208190526040808320805460ff19168317905560028054928301815583527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace90910180546001600160a01b03191684179055517f3f008fd510eae7a9e7bee13513d7b83bef8003d488b5a3d0b0da4de71d6846f19190a250565b6104fc610923565b6003546001600160a01b03166105735760405162461bcd60e51b815260206004820152603660248201527f576f6e64657266756c54726561737572793a3a616c6c6f636174654665653a46604482015275195948191a5cdd1c9a589d5d1bdc881b9bdd081cd95d60521b6064820152608401610249565b600081116105da5760405162461bcd60e51b815260206004820152602e60248201527f576f6e64657266756c54726561737572793a3a616c6c6f636174654665653a2060448201526d1a5b9d985b1a5908185b5bdd5b9d60921b6064820152608401610249565b6003546105f4906001600160a01b0384811691168361097d565b60035460405163b66503cf60e01b81526001600160a01b038481166004830152602482018490529091169063b66503cf90604401600060405180830381600087803b15801561064257600080fd5b505af1158015610656573d6000803e3d6000fd5b50505050816001600160a01b03167f6d2dbeb83c612f93fc06a5a8d74ebf64946ae126076c60c7f3b69c05ecdbd3a48260405161069591815260200190565b60405180910390a25050565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a082319060240160206040518083038186803b1580156106e357600080fd5b505afa1580156106f7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071b9190610db8565b92915050565b610729610923565b6107336000610a66565b565b6002818154811061074557600080fd5b6000918252602090912001546001600160a01b0316905081565b3360009081526001602052604090205460ff166107e6576040805162461bcd60e51b81526020600482015260248101919091527f576f6e64657266756c54726561737572793a3a7265717565737446756e643a2060448201527f4f6e6c7920737472617465676965732063616e20726571756573742066756e646064820152608401610249565b6107ef826106a1565b8111156108645760405162461bcd60e51b815260206004820152603e60248201527f576f6e64657266756c54726561737572793a3a7265717565737446756e643a2060448201527f52657175657374206d6f72652066756e64207468616e2062616c616e636500006064820152608401610249565b6108786001600160a01b038316338361097d565b60405181815233907fc01885824d09db2a2cad0d38d82321fdb9026a98b421d8ffdacb61e52310750d90602001610695565b6108b2610923565b6001600160a01b0381166109175760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610249565b61092081610a66565b50565b6000546001600160a01b031633146107335760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610249565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b1580156109c957600080fd5b505afa1580156109dd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a019190610db8565b610a0b9190610e1f565b604080516001600160a01b038616602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b179052909150610a60908590610ab6565b50505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000610b0b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b8d9092919063ffffffff16565b805190915015610b885780806020019051810190610b299190610d80565b610b885760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610249565b505050565b6060610b9c8484600085610ba4565b949350505050565b606082471015610c055760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610249565b600080866001600160a01b03168587604051610c219190610dd0565b60006040518083038185875af1925050503d8060008114610c5e576040519150601f19603f3d011682016040523d82523d6000602084013e610c63565b606091505b5091509150610c7487838387610c7f565b979650505050505050565b60608315610ceb578251610ce4576001600160a01b0385163b610ce45760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610249565b5081610b9c565b610b9c8383815115610d005781518083602001fd5b8060405162461bcd60e51b81526004016102499190610dec565b80356001600160a01b0381168114610d3157600080fd5b919050565b600060208284031215610d47578081fd5b610d5082610d1a565b9392505050565b60008060408385031215610d69578081fd5b610d7283610d1a565b946020939093013593505050565b600060208284031215610d91578081fd5b81518015158114610d50578182fd5b600060208284031215610db1578081fd5b5035919050565b600060208284031215610dc9578081fd5b5051919050565b60008251610de2818460208701610e37565b9190910192915050565b6020815260008251806020840152610e0b816040850160208701610e37565b601f01601f19169190910160400192915050565b60008219821115610e3257610e32610e7e565b500190565b60005b83811015610e52578181015183820152602001610e3a565b83811115610a605750506000910152565b6000600019821415610e7757610e77610e7e565b5060010190565b634e487b7160e01b600052601160045260246000fdfea26469706673582212208693d05e1f386cd38eefbbf7cb96d48cb351569e764f5d46907f6e7263e78a2364736f6c63430008040033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "addStrategy(address)": {
        "params": {
          "_strategy": "Address of the strategy contract"
        }
      },
      "allocateFee(address,uint256)": {
        "params": {
          "_amount": "Amount of fee will be distributed",
          "_token": "Address of ERC-20 token"
        }
      },
      "balanceOf(address)": {
        "params": {
          "_token": "Address of the ERC-20 token"
        },
        "returns": {
          "_0": "Balance of the WonderfulTreasury"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeStrategy(address)": {
        "params": {
          "_strategy": "Address of the strategy contract"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "requestFund(address,uint256)": {
        "params": {
          "_amount": "The requested amount",
          "_token": "Address of the ERC-20 token"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "addStrategy(address)": {
        "notice": "Add new strategy"
      },
      "allocateFee(address,uint256)": {
        "notice": "Allocate protocol's fee to stakers"
      },
      "balanceOf(address)": {
        "notice": "Return ERC-20 balance of WonderfulTreasury"
      },
      "removeStrategy(address)": {
        "notice": "Remove current strategy"
      },
      "requestFund(address,uint256)": {
        "notice": "Request fund from Reserve - only can be called from whitelisted strategies"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/treasury/WonderfulTreasury.sol:WonderfulTreasury",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 12923,
        "contract": "contracts/treasury/WonderfulTreasury.sol:WonderfulTreasury",
        "label": "strategies",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 12926,
        "contract": "contracts/treasury/WonderfulTreasury.sol:WonderfulTreasury",
        "label": "strategiesArray",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 12929,
        "contract": "contracts/treasury/WonderfulTreasury.sol:WonderfulTreasury",
        "label": "staking",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(IWonderfulStaking)10049"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(IWonderfulStaking)10049": {
        "encoding": "inplace",
        "label": "contract IWonderfulStaking",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}